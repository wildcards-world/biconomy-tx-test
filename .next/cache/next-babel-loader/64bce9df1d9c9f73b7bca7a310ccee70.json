{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.hexToUtf8 = void 0;\n\nconst utf8_1 = __importDefault(require(\"utf8\"));\n\nexports.hexToUtf8 = function (hex) {\n  // if (!isHexStrict(hex))\n  //     throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n  let str = \"\";\n  let code = 0;\n  hex = hex.replace(/^0x/i, ''); // remove 00 padding from either side\n\n  hex = hex.replace(/^(?:00)*/, '');\n  hex = hex.split(\"\").reverse().join(\"\");\n  hex = hex.replace(/^(?:00)*/, '');\n  hex = hex.split(\"\").reverse().join(\"\");\n  let l = hex.length;\n\n  for (let i = 0; i < l; i += 2) {\n    code = parseInt(hex.substr(i, 2), 16); // if (code !== 0) {\n\n    str += String.fromCharCode(code); // }\n  }\n\n  return utf8_1.default.decode(str);\n};","map":{"version":3,"sources":["/home/jasoons/Documents/code/spikes/biconomy-tx-test/components/test-eth-permit/lib.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","hexToUtf8","utf8_1","require","hex","str","code","replace","split","reverse","join","l","length","i","parseInt","substr","String","fromCharCode","default","decode"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AACA,MAAMC,MAAM,GAAGR,eAAe,CAACS,OAAO,CAAC,MAAD,CAAR,CAA9B;;AACAJ,OAAO,CAACE,SAAR,GAAoB,UAAUG,GAAV,EAAe;AAC/B;AACA;AACA,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,IAAI,GAAG,CAAX;AACAF,EAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAN,CAL+B,CAM/B;;AACAH,EAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAN;AACAH,EAAAA,GAAG,GAAGA,GAAG,CAACI,KAAJ,CAAU,EAAV,EAAcC,OAAd,GAAwBC,IAAxB,CAA6B,EAA7B,CAAN;AACAN,EAAAA,GAAG,GAAGA,GAAG,CAACG,OAAJ,CAAY,UAAZ,EAAwB,EAAxB,CAAN;AACAH,EAAAA,GAAG,GAAGA,GAAG,CAACI,KAAJ,CAAU,EAAV,EAAcC,OAAd,GAAwBC,IAAxB,CAA6B,EAA7B,CAAN;AACA,MAAIC,CAAC,GAAGP,GAAG,CAACQ,MAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuBE,CAAC,IAAI,CAA5B,EAA+B;AAC3BP,IAAAA,IAAI,GAAGQ,QAAQ,CAACV,GAAG,CAACW,MAAJ,CAAWF,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAf,CAD2B,CAE3B;;AACAR,IAAAA,GAAG,IAAIW,MAAM,CAACC,YAAP,CAAoBX,IAApB,CAAP,CAH2B,CAI3B;AACH;;AACD,SAAOJ,MAAM,CAACgB,OAAP,CAAeC,MAAf,CAAsBd,GAAtB,CAAP;AACH,CAnBD","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hexToUtf8 = void 0;\nconst utf8_1 = __importDefault(require(\"utf8\"));\nexports.hexToUtf8 = function (hex) {\n    // if (!isHexStrict(hex))\n    //     throw new Error('The parameter \"'+ hex +'\" must be a valid HEX string.');\n    let str = \"\";\n    let code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    let l = hex.length;\n    for (let i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8_1.default.decode(str);\n};\n"]},"metadata":{},"sourceType":"script"}
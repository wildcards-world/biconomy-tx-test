webpackHotUpdate_N_E("pages/index",{

/***/ "./components/dist/rpc.js":
/*!********************************!*\
  !*** ./components/dist/rpc.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.call = exports.getChainId = exports.setChainIdOverride = exports.signData = exports.send = void 0;\n\nvar randomId = function randomId() {\n  return Math.floor(Math.random() * 10000000000);\n};\n\nexports.send = function (provider, method, params) {\n  return new Promise(function (resolve, reject) {\n    console.log(\"Send 1\");\n    var payload = {\n      id: randomId(),\n      method: method,\n      params: params,\n      from: \"0xd3Cbce59318B2E570883719c8165F9390A12BdD6\"\n    };\n    console.log(\"Send 2\", payload);\n\n    var callback = function callback(err, result) {\n      if (err) {\n        console.log(\"Send 3\", err);\n        reject(err);\n      } else if (result.error) {\n        console.log(\"Send 4\", result.error);\n        console.error(result.error);\n        reject(result.error);\n      } else {\n        console.log(\"Send 5\", result.result);\n        resolve(result.result);\n      }\n    }; // let _provider = provider.provider || provider;\n    // if (_rovider.sendAsync) {\n    //     console.log(\"privoder send async\")\n    //     _provider.sendAsync(payload, callback);\n    //   }\n    //   else {\n\n\n    console.log(\"privoder - normal send\");\n    provider.send(payload, callback); // _provider.send(payload, callback);\n    // }\n  });\n};\n\nexports.signData = function (provider, fromAddress, typeData) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _typeData, result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\"a-\");\n            _typeData = typeof typeData === 'string' ? typeData : JSON.stringify(typeData);\n            console.log(\"type data\", typeData);\n            _context.next = 5;\n            return exports.send(provider, 'eth_signTypedData', [fromAddress, JSON.parse(_typeData)]);\n\n          case 5:\n            result = _context.sent;\n            console.log(\"b\");\n            return _context.abrupt(\"return\", {\n              r: result.slice(0, 66),\n              s: '0x' + result.slice(66, 130),\n              v: parseInt(result.slice(130, 132), 16)\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n};\n\nvar chainIdOverride = null;\n\nexports.setChainIdOverride = function (id) {\n  chainIdOverride = id;\n};\n\nexports.getChainId = function (provider) {\n  return __awaiter(void 0, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", chainIdOverride || exports.send(provider, 'eth_chainId'));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n};\n\nexports.call = function (provider, to, data) {\n  return exports.send(provider, 'eth_call', [{\n    to: to,\n    data: data\n  }, 'latest']);\n};\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/module.js */ \"./node_modules/webpack/buildin/module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/dist/rpc.js\n");

/***/ })

})
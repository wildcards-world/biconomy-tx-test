webpackHotUpdate_N_E("pages/index",{

/***/ "./components/testBiconomy.js":
/*!************************************!*\
  !*** ./components/testBiconomy.js ***!
  \************************************/
/*! exports provided: BiconomyComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"BiconomyComponent\", function() { return BiconomyComponent; });\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _web3_react_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @web3-react/core */ \"./node_modules/@web3-react/core/dist/core.esm.js\");\n/* harmony import */ var _WildcardSteward_v3_matic_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./WildcardSteward_v3_matic.json */ \"./components/WildcardSteward_v3_matic.json\");\nvar _WildcardSteward_v3_matic_json__WEBPACK_IMPORTED_MODULE_4___namespace = /*#__PURE__*/__webpack_require__.t(/*! ./WildcardSteward_v3_matic.json */ \"./components/WildcardSteward_v3_matic.json\", 1);\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! web3 */ \"./node_modules/web3/lib/index.js\");\n/* harmony import */ var web3__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(web3__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var ethereumjs_util__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethereumjs-util */ \"./node_modules/ethereumjs-util/dist/index.js\");\n/* harmony import */ var ethereumjs_util__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(ethereumjs_util__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var ethereumjs_abi__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ethereumjs-abi */ \"./node_modules/ethereumjs-abi/index.js\");\n/* harmony import */ var ethereumjs_abi__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(ethereumjs_abi__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var _biconomy_mexa__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @biconomy/mexa */ \"./node_modules/@biconomy/mexa/src/index.js\");\n/* harmony import */ var _biconomy_mexa__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_biconomy_mexa__WEBPACK_IMPORTED_MODULE_9__);\n\n\n\nvar _this = undefined,\n    _jsxFileName = \"/home/jasoons/Documents/code/spikes/biconomy-tx-test/components/testBiconomy.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_2___default.a.createElement;\n\n\n\n\n\nvar Contract = __webpack_require__(/*! web3-eth-contract */ \"./node_modules/web3-eth-contract/lib/index.js\");\n\n\n\n\n\n\nvar _require = __webpack_require__(/*! ./dist/eth-permit */ \"./components/dist/eth-permit.js\"),\n    signDaiPermit = _require.signDaiPermit; // const { signDaiPermit } = require(\"eth-permit\");\n\n/******\n * HELPER CODE\n */\n\n\nvar constructMetaTransactionMessage = function constructMetaTransactionMessage(nonce, chainId, functionSignature, contractAddress) {\n  return ethereumjs_abi__WEBPACK_IMPORTED_MODULE_7___default.a.soliditySHA3([\"uint256\", \"address\", \"uint256\", \"bytes\"], [nonce, contractAddress, chainId, Object(ethereumjs_util__WEBPACK_IMPORTED_MODULE_6__[\"toBuffer\"])(functionSignature)]);\n};\n\nvar getSignatureParameters = function getSignatureParameters(signature) {\n  if (!web3.utils.isHexStrict(signature)) {\n    throw new Error('Given value \"'.concat(signature, '\" is not a valid hex string.'));\n  }\n\n  var r = signature.slice(0, 66);\n  var s = \"0x\".concat(signature.slice(66, 130));\n  var v = \"0x\".concat(signature.slice(130, 132));\n  v = web3.utils.hexToNumber(v);\n  if (![27, 28].includes(v)) v += 27;\n  return {\n    r: r,\n    s: s,\n    v: v\n  };\n};\n\nvar executeMetaTransaciton = /*#__PURE__*/function () {\n  var _ref = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(userAddress, functionSignature, contract, contractAddress, chainId, web3) {\n    var eventEmitter, nonce, messageToSign, signature, _getSignatureParamete, r, s, v, transactionListener;\n\n    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            eventEmitter = new events__WEBPACK_IMPORTED_MODULE_8___default.a.EventEmitter();\n\n            if (!(contract && userAddress && functionSignature, chainId, contractAddress)) {\n              _context.next = 16;\n              break;\n            }\n\n            _context.next = 4;\n            return contract.methods.getNonce(userAddress).call();\n\n          case 4:\n            nonce = _context.sent;\n            // console.log(\"The nonce is:\", nonce);\n            messageToSign = constructMetaTransactionMessage(nonce, chainId, functionSignature, contractAddress); // console.log(\"web3\", web3);\n            // console.log(\"web3.eth\", web3.eth);\n            // console.log(\"web3.eth.personal\", web3.eth.personal);\n            // const signature = await web3.eth.sign(\n\n            _context.next = 8;\n            return web3.eth.personal.sign(\"0x\" + messageToSign.toString(\"hex\"), userAddress);\n\n          case 8:\n            signature = _context.sent;\n            // console.info(`User signature is ${signature}`);\n            _getSignatureParamete = getSignatureParameters(signature), r = _getSignatureParamete.r, s = _getSignatureParamete.s, v = _getSignatureParamete.v;\n\n            try {\n              fetch(\"https://api.biconomy.io/api/v2/meta-tx/native\", {\n                method: \"POST\",\n                headers: {\n                  \"x-api-key\": \"IUNMuYhZ7.9c178f07-e191-4877-b995-ef4b61ed956f\",\n                  \"Content-Type\": \"application/json;charset=utf-8\"\n                },\n                body: JSON.stringify({\n                  to: contractAddress,\n                  apiId: \"e0dd72a6-78e0-44f8-b56e-902c1b519ffa\",\n                  params: [userAddress, functionSignature, r, s, v],\n                  // params: [userAddress, functionData, r, s, v],\n                  from: userAddress\n                })\n              }).then(function (response) {\n                return response.json();\n              }).then(function (result) {\n                console.log(result);\n                console.log(\"Transaction sent by relayer with hash \".concat(result.txHash));\n              })[\"catch\"](function (error) {\n                console.log(error);\n              });\n            } catch (error) {\n              console.log(error);\n            } // No need to calculate gas limit or gas price here\n\n\n            transactionListener = contract.methods.executeMetaTransaction(userAddress, functionSignature, r, s, v).send({\n              from: userAddress\n            });\n            transactionListener.on(\"transactionHash\", function (hash) {\n              eventEmitter.emit(\"transactionHash\", hash);\n            }).once(\"confirmation\", function (confirmation, recipet) {\n              eventEmitter.emit(\"confirmation\", confirmation, recipet);\n            }).on(\"error\", function (error) {\n              eventEmitter.emit(\"error\", error);\n            });\n            return _context.abrupt(\"return\", eventEmitter);\n\n          case 16:\n            console.log(\"All params userAddress, functionSignature, chainId, contract address and contract object are mandatory\");\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function executeMetaTransaciton(_x, _x2, _x3, _x4, _x5, _x6) {\n    return _ref.apply(this, arguments);\n  };\n}();\n/******\n * HELPER CODE -end\n */\n\n\nvar BiconomyComponent = function BiconomyComponent() {\n  _s();\n\n  var context = Object(_web3_react_core__WEBPACK_IMPORTED_MODULE_3__[\"useWeb3React\"])();\n  var connector = context.connector,\n      library = context.library,\n      chainId = context.chainId,\n      account = context.account,\n      activate = context.activate,\n      deactivate = context.deactivate,\n      active = context.active,\n      error = context.error;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__[\"useState\"])(false),\n      hasSent = _useState[0],\n      setHasSent = _useState[1];\n\n  if (!library) return __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 24\n    }\n  }, \"Loading\");\n  if (!account) return __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 24\n    }\n  }, \"Loading\");\n\n  if (!hasSent) {\n    console.log(\"Before eth-permit - using this account:\", account); // signDaiPermit(\n    //   library.provider,\n    //   // window.ethereum,\n    //   \"0x0099f841a6ab9a082828fac66134fd25c9d8a195\",\n    //   account,\n    //   \"0x89e2d4628435368a7CD72611E769dDe27802b95e\",\n    //   ).then((result) => console.log(\"this is the result!\", result));\n    // const msgParams = [\n    //   {\n    //     type: 'string',      // Any valid solidity type\n    //     name: 'Message',     // Any string label you want\n    //     value: 'Hi, Alice!'  // The value to sign\n    // },\n    // {   \n    //   type: 'uint32',\n    //       name: 'A number',\n    //       value: '1337'\n    //   }\n    // ];\n\n    var newMessage = [\"0xd3Cbce59318B2E570883719c8165F9390A12BdD6\", {\n      \"types\": {\n        \"EIP712Domain\": [{\n          \"name\": \"name\",\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"type\": \"string\"\n        }, {\n          \"name\": \"chainId\",\n          \"type\": \"uint256\"\n        }, {\n          \"name\": \"verifyingContract\",\n          \"type\": \"address\"\n        }],\n        \"Permit\": [{\n          \"name\": \"holder\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"spender\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"nonce\",\n          \"type\": \"uint256\"\n        }, {\n          \"name\": \"expiry\",\n          \"type\": \"uint256\"\n        }, {\n          \"name\": \"allowed\",\n          \"type\": \"bool\"\n        }]\n      },\n      \"primaryType\": \"Permit\",\n      \"domain\": {\n        \"name\": \"Dai Stablecoin\",\n        \"version\": \"1\",\n        \"chainId\": \"0x05\",\n        \"verifyingContract\": \"0x0099f841a6ab9a082828fac66134fd25c9d8a195\"\n      },\n      \"message\": {\n        \"holder\": \"0xd3Cbce59318B2E570883719c8165F9390A12BdD6\",\n        \"spender\": \"0x89e2d4628435368a7CD72611E769dDe27802b95e\",\n        \"nonce\": \"0x0000000000000000000000000000000000000000000000000000000000000000\",\n        \"expiry\": \"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\",\n        \"allowed\": true\n      }\n    }]; //   \"from\": \"0xd3Cbce59318B2E570883719c8165F9390A12BdD6\",\n    //   \"jsonrpc\": \"2.0\"\n    // };\n\n    web3.currentProvider.sendAsync({\n      method: 'eth_signTypedData',\n      params: [newMessage, account],\n      // params: [msgParams, account],\n      from: account\n    }, function (err, result) {\n      console.log({\n        err: err,\n        result: result\n      });\n    });\n    setHasSent(true);\n    console.log(\"Busy signing\");\n  }\n\n  return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 8\n    }\n  }, \"doing magic\"); // web3 = new Web3(library.provider);\n  // const contractAddress = \"0x59b3c176c39bd8734717492f4da8fe26ff6a454d\";\n  // const biconomy = new Biconomy(library.provider, {\n  //   apiKey: \"IUNMuYhZ7.9c178f07-e191-4877-b995-ef4b61ed956f\",\n  //   debug: true,\n  // });\n  // const web3Biconomy = new Web3(biconomy);\n  // var contract = new web3Biconomy.eth.Contract(\n  //   jsonInterface.abi,\n  //   contractAddress\n  // );\n  // const sendTransaction = async () => {\n  //   let functionSignature = contract.methods\n  //     .testFunctionThatDoesNothing(account)\n  //     .encodeABI();\n  //   // let result = contract.methods.testFunctionThatDoesNothing(account).send({\n  //   //   from: account,\n  //   // });\n  //   let result = await executeMetaTransaciton(\n  //     account,\n  //     functionSignature,\n  //     contract,\n  //     contractAddress,\n  //     \"4\",\n  //     web3Biconomy\n  //   );\n  //   // result\n  //   //   .on(\"transactionHash\", (hash) => {\n  //   //     // On transacion Hash\n  //   //     console.log(\"hash\", { hash });\n  //   //   })\n  //   //   .once(\"confirmation\", (confirmation, recipet) => {\n  //   //     console.log(\"confirmation\", { confirmation, recipet });\n  //   //     // On Confirmation\n  //   //   })\n  //   //   .on(\"error\", (error) => {\n  //   //     // On Error\n  //   //   });\n  // };\n  // return <button onClick={sendTransaction}>Send Tx</button>;\n};\n\n_s(BiconomyComponent, \"YJU3LFbOi+W/bOtX25zGQoUUC+w=\", false, function () {\n  return [_web3_react_core__WEBPACK_IMPORTED_MODULE_3__[\"useWeb3React\"]];\n});\n\n_c = BiconomyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BiconomyComponent\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/testBiconomy.js\n");

/***/ })

})